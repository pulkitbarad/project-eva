/**
 * Copyright 2015-2018 NuoCanvas.
 *
 *
 * Created by Pulkit on 13APR2018
 *
 * Content of this file is proprietary and confidential.
 * It shall not be reused or disclosed without prior consent
 * of distributor
 **/

"use strict";
const jqWidgetThemeName = "arctic";
var sessionId;
var profileImageUrl = "";
var activeUsername = "Pulkit";
var historyTopics = [
  "2018 Marketing Analysis",
  "Machine Learning Tutorial",
  "Data Preparation Tutorial",
  "Visualization Tutorial",
  "Sales Analysis of Q12018",
  "Analysis for Pulkit",
  "Amsterdam tour brain storming"
];
var jsPlumbRef = null;
$(document).ready(function() {
  //Update filed style
  updateLoginFieldStyle();
  //

  // $("#ajaxLoader")
  // .jqxLoader(
  // 	{
  // 		text:"",
  // 		isModal: true,
  // 		width: 60,
  // 		height: 60,
  // 		theme: jqWidgetThemeName
  // 	}
  // );
  $("#mainContainer").hide("fast");
  $("#hiddenElements").hide("fast");
  $("#invalidLoginMessage").hide();
  $("#username").on("click", function() {
    $("#invalidLoginMessage").hide("slow");
  });
  $("#password").on("click", function() {
    $("#invalidLoginMessage").hide("slow");
  });
  $("#logOutButton").off("click");
  $("#logOutButton").on("click", function() {
    sessionId = "";
    window.location.reload();
  });

  $("#loginButton").off("click");
  $("#loginButton").on("click", function() {
    // START of test code block
    sessionId = "A1E58C40449F1FDA9BBCE6AA7B6BE975";
    // END of test code block
    if (sessionId) {
      $("#loginContainerWrap").hide("fast");
      $("#mainContainer").show("fast");
      initUI();
    } else {
      var username = $("#username").val();
      var password = $("#password").val();
      if (username.length > 0 && password.length > 0) {
        $("#ajaxLoader").addClass("is-active");
        document.getElementById("loginButton").disabled = true;
        directCall("rt19", "NuoCredentialsRequest", {
          UserName: username,
          Password: password
        }).done(function(data) {
          if (data.StatusCode && data.StatusCode === 200 && data.Content) {
            $("#invalidLoginMessage").html("Loading...");
            $("#invalidLoginMessage").css("color", "green");
            $("#loginButton").css(
              "background-color",
              "var(--nuo-orange-solid)"
            );
            $("#invalidLoginMessage").show("fast");

            $("#loginContainerWrap").hide("fast");
            $("#mainContainer").show("fast");

            loadInternalScript(
              data.Content.substring(data.Content.indexOf("profileImageUrl"))
            );
            $("#ajaxLoader").removeClass("is-active");
            initUI();
          } else {
            handleLoginFailure("Username or password is incorrect!");
            $("#ajaxLoader").removeClass("is-active");
          }
        });
      }
    }
  });
});

function handleLoginFailure(msg) {
  $("#ajaxLoader").removeClass("is-active");
  document.getElementById("loginButton").disabled = false;
  $("#invalidLoginMessage").css("color", "red");
  $("#invalidLoginMessage").html(msg);
  $("#invalidLoginMessage").show("slow");
  $("#username").val("");
  $("#password").val("");
}

function loadInternalScript(content) {
  var s = document.createElement("script");
  s.type = "text/javascript";
  try {
    s.appendChild(document.createTextNode(content));
    document.head.appendChild(s);
  } catch (e) {
    s.text = content;
    document.head.appendChild(s);
  }
}

function directCall(requestType, requestDetailsType, requestDetails) {
  var requestBody = {
    Body: {
      RequestId: "Request_" + Date.now(),
      RequestType: requestType
    }
  };

  if (sessionId && sessionId.trim().length > 0) {
    requestBody.Body.SessionId = sessionId;
  }

  if (requestDetailsType && requestDetailsType.trim().length > 0) {
    requestBody.Body[requestDetailsType] = requestDetails;
  }

  return $.post({
    // url: "./v1",
    url: "http://localhost:5656/v1",
    contentType: "application/json",
    data: JSON.stringify(requestBody)
  });
}

function updateLoginFieldStyle() {
  $(".input__field").each(function() {
    if ($(this).val() != "") {
      $(this)
        .closest(".input--juro")
        .addClass("input--filled");
    } else {
      $(this)
        .closest(".input--juro")
        .removeClass("input--filled");
    }
  });
  $(".input__field").on("keyUp focus blur", function() {
    if ($(this).val() != "") {
      $(this)
        .closest(".input--juro")
        .addClass("input--filled");
    } else {
      $(this)
        .closest(".input--juro")
        .removeClass("input--filled");
    }
  });
}

const countryNames = [
  "afghanistan",
  "aland islands",
  "albania",
  "algeria",
  "american samoa",
  "andorra",
  "angola",
  "anguilla",
  "antarctica",
  "antigua and barbuda",
  "argentina",
  "armenia",
  "aruba",
  "australia",
  "austria",
  "azerbaijan",
  "bahamas",
  "bahrain",
  "bangladesh",
  "barbados",
  "belarus",
  "belgium",
  "belize",
  "benin",
  "bermuda",
  "bhutan",
  "bolivia",
  "bosnia and herzegovina",
  "botswana",
  "bouvet island",
  "brazil",
  "british virgin islands",
  "british indian ocean territory",
  "brunei darussalam",
  "bulgaria",
  "burkina faso",
  "burundi",
  "cambodia",
  "cameroon",
  "canada",
  "cape verde",
  "cayman islands",
  "central african republic",
  "chad",
  "chile",
  "china",
  "hong kong, sar china",
  "macao, sar china",
  "christmas island",
  "cocos (keeling) islands",
  "colombia",
  "comoros",
  "congo (brazzaville)",
  "congo, (kinshasa)",
  "cook islands",
  "costa rica",
  "côte d'ivoire",
  "croatia",
  "cuba",
  "cyprus",
  "czech republic",
  "denmark",
  "djibouti",
  "dominica",
  "dominican republic",
  "ecuador",
  "egypt",
  "el salvador",
  "equatorial guinea",
  "eritrea",
  "estonia",
  "ethiopia",
  "falkland islands (malvinas)",
  "faroe islands",
  "fiji",
  "finland",
  "france",
  "french guiana",
  "french polynesia",
  "french southern territories",
  "gabon",
  "gambia",
  "georgia",
  "germany",
  "ghana",
  "gibraltar",
  "greece",
  "greenland",
  "grenada",
  "guadeloupe",
  "guam",
  "guatemala",
  "guernsey",
  "guinea",
  "guinea-bissau",
  "guyana",
  "haiti",
  "heard and mcdonald islands",
  "holy see (vatican city state)",
  "honduras",
  "hungary",
  "iceland",
  "india",
  "indonesia",
  "iran, islamic republic of",
  "iraq",
  "ireland",
  "isle of man",
  "israel",
  "italy",
  "jamaica",
  "japan",
  "jersey",
  "jordan",
  "kazakhstan",
  "kenya",
  "kiribati",
  "korea (north)",
  "korea (south)",
  "kuwait",
  "kyrgyzstan",
  "lao pdr",
  "latvia",
  "lebanon",
  "lesotho",
  "liberia",
  "libya",
  "liechtenstein",
  "lithuania",
  "luxembourg",
  "macedonia, republic of",
  "madagascar",
  "malawi",
  "malaysia",
  "maldives",
  "mali",
  "malta",
  "marshall islands",
  "martinique",
  "mauritania",
  "mauritius",
  "mayotte",
  "mexico",
  "micronesia, federated states of",
  "moldova",
  "monaco",
  "mongolia",
  "montenegro",
  "montserrat",
  "morocco",
  "mozambique",
  "myanmar",
  "namibia",
  "nauru",
  "nepal",
  "netherlands",
  "netherlands antilles",
  "new caledonia",
  "new zealand",
  "nicaragua",
  "niger",
  "nigeria",
  "niue",
  "norfolk island",
  "northern mariana islands",
  "norway",
  "oman",
  "pakistan",
  "palau",
  "palestinian territory",
  "panama",
  "papua new guinea",
  "paraguay",
  "peru",
  "philippines",
  "pitcairn",
  "poland",
  "portugal",
  "puerto rico",
  "qatar",
  "réunion",
  "romania",
  "russian federation",
  "rwanda",
  "saint-barthélemy",
  "saint helena",
  "saint kitts and nevis",
  "saint lucia",
  "saint-martin (french part)",
  "saint pierre and miquelon",
  "saint vincent and grenadines",
  "samoa",
  "san marino",
  "sao tome and principe",
  "saudi arabia",
  "senegal",
  "serbia",
  "seychelles",
  "sierra leone",
  "singapore",
  "slovakia",
  "slovenia",
  "solomon islands",
  "somalia",
  "south africa",
  "south georgia and the south sandwich islands",
  "south sudan",
  "spain",
  "sri lanka",
  "sudan",
  "suriname",
  "svalbard and jan mayen islands",
  "swaziland",
  "sweden",
  "switzerland",
  "syrian arab republic (syria)",
  "taiwan, republic of china",
  "tajikistan",
  "tanzania, united republic of",
  "thailand",
  "timor-leste",
  "togo",
  "tokelau",
  "tonga",
  "trinidad and tobago",
  "tunisia",
  "turkey",
  "turkmenistan",
  "turks and caicos islands",
  "tuvalu",
  "uganda",
  "ukraine",
  "united arab emirates",
  "united kingdom",
  "great britain",
  "england",
  "united kingdoms",
  "united states",
  "united states of america",
  "us minor outlying islands",
  "uruguay",
  "uzbekistan",
  "vanuatu",
  "venezuela (bolivarian republic)",
  "viet nam",
  "virgin islands, us",
  "wallis and futuna islands",
  "western sahara",
  "yemen",
  "zambia",
  "zimbabwe"
];

const countryIso2Codes = [
  "af",
  "ax",
  "al",
  "dz",
  "as",
  "ad",
  "ao",
  "ai",
  "aq",
  "ag",
  "ar",
  "am",
  "aw",
  "au",
  "at",
  "az",
  "bs",
  "bh",
  "bd",
  "bb",
  "by",
  "be",
  "bz",
  "bj",
  "bm",
  "bt",
  "bo",
  "ba",
  "bw",
  "bv",
  "br",
  "vg",
  "io",
  "bn",
  "bg",
  "bf",
  "bi",
  "kh",
  "cm",
  "ca",
  "cv",
  "ky",
  "cf",
  "td",
  "cl",
  "cn",
  "hk",
  "mo",
  "cx",
  "cc",
  "co",
  "km",
  "cg",
  "cd",
  "ck",
  "cr",
  "ci",
  "hr",
  "cu",
  "cy",
  "cz",
  "dk",
  "dj",
  "dm",
  "do",
  "ec",
  "eg",
  "sv",
  "gq",
  "er",
  "ee",
  "et",
  "fk",
  "fo",
  "fj",
  "fi",
  "fr",
  "gf",
  "pf",
  "tf",
  "ga",
  "gm",
  "ge",
  "de",
  "gh",
  "gi",
  "gr",
  "gl",
  "gd",
  "gp",
  "gu",
  "gt",
  "gg",
  "gn",
  "gw",
  "gy",
  "ht",
  "hm",
  "va",
  "hn",
  "hu",
  "is",
  "in",
  "id",
  "ir",
  "iq",
  "ie",
  "im",
  "il",
  "it",
  "jm",
  "jp",
  "je",
  "jo",
  "kz",
  "ke",
  "ki",
  "kp",
  "kr",
  "kw",
  "kg",
  "la",
  "lv",
  "lb",
  "ls",
  "lr",
  "ly",
  "li",
  "lt",
  "lu",
  "mk",
  "mg",
  "mw",
  "my",
  "mv",
  "ml",
  "mt",
  "mh",
  "mq",
  "mr",
  "mu",
  "yt",
  "mx",
  "fm",
  "md",
  "mc",
  "mn",
  "me",
  "ms",
  "ma",
  "mz",
  "mm",
  "na",
  "nr",
  "np",
  "nl",
  "an",
  "nc",
  "nz",
  "ni",
  "ne",
  "ng",
  "nu",
  "nf",
  "mp",
  "no",
  "om",
  "pk",
  "pw",
  "ps",
  "pa",
  "pg",
  "py",
  "pe",
  "ph",
  "pn",
  "pl",
  "pt",
  "pr",
  "qa",
  "re",
  "ro",
  "ru",
  "rw",
  "bl",
  "sh",
  "kn",
  "lc",
  "mf",
  "pm",
  "vc",
  "ws",
  "sm",
  "st",
  "sa",
  "sn",
  "rs",
  "sc",
  "sl",
  "sg",
  "sk",
  "si",
  "sb",
  "so",
  "za",
  "gs",
  "ss",
  "es",
  "lk",
  "sd",
  "sr",
  "sj",
  "sz",
  "se",
  "ch",
  "sy",
  "tw",
  "tj",
  "tz",
  "th",
  "tl",
  "tg",
  "tk",
  "to",
  "tt",
  "tn",
  "tr",
  "tm",
  "tc",
  "tv",
  "ug",
  "ua",
  "ae",
  "gb",
  "gb",
  "gb",
  "gb",
  "us",
  "us",
  "um",
  "uy",
  "uz",
  "vu",
  "ve",
  "vn",
  "vi",
  "wf",
  "eh",
  "ye",
  "zm",
  "zw"
];

const countryIso3Codes = [
  "afg",
  "ala",
  "alb",
  "dza",
  "asm",
  "and",
  "ago",
  "aia",
  "ata",
  "atg",
  "arg",
  "arm",
  "abw",
  "aus",
  "aut",
  "aze",
  "bhs",
  "bhr",
  "bgd",
  "brb",
  "blr",
  "bel",
  "blz",
  "ben",
  "bmu",
  "btn",
  "bol",
  "bih",
  "bwa",
  "bvt",
  "bra",
  "vgb",
  "iot",
  "brn",
  "bgr",
  "bfa",
  "bdi",
  "khm",
  "cmr",
  "can",
  "cpv",
  "cym",
  "caf",
  "tcd",
  "chl",
  "chn",
  "hkg",
  "mac",
  "cxr",
  "cck",
  "col",
  "com",
  "cog",
  "cod",
  "cok",
  "cri",
  "civ",
  "hrv",
  "cub",
  "cyp",
  "cze",
  "dnk",
  "dji",
  "dma",
  "dom",
  "ecu",
  "egy",
  "slv",
  "gnq",
  "eri",
  "est",
  "eth",
  "flk",
  "fro",
  "fji",
  "fin",
  "fra",
  "guf",
  "pyf",
  "atf",
  "gab",
  "gmb",
  "geo",
  "deu",
  "gha",
  "gib",
  "grc",
  "grl",
  "grd",
  "glp",
  "gum",
  "gtm",
  "ggy",
  "gin",
  "gnb",
  "guy",
  "hti",
  "hmd",
  "vat",
  "hnd",
  "hun",
  "isl",
  "ind",
  "idn",
  "irn",
  "irq",
  "irl",
  "imn",
  "isr",
  "ita",
  "jam",
  "jpn",
  "jey",
  "jor",
  "kaz",
  "ken",
  "kir",
  "prk",
  "kor",
  "kwt",
  "kgz",
  "lao",
  "lva",
  "lbn",
  "lso",
  "lbr",
  "lby",
  "lie",
  "ltu",
  "lux",
  "mkd",
  "mdg",
  "mwi",
  "mys",
  "mdv",
  "mli",
  "mlt",
  "mhl",
  "mtq",
  "mrt",
  "mus",
  "myt",
  "mex",
  "fsm",
  "mda",
  "mco",
  "mng",
  "mne",
  "msr",
  "mar",
  "moz",
  "mmr",
  "nam",
  "nru",
  "npl",
  "nld",
  "ant",
  "ncl",
  "nzl",
  "nic",
  "ner",
  "nga",
  "niu",
  "nfk",
  "mnp",
  "nor",
  "omn",
  "pak",
  "plw",
  "pse",
  "pan",
  "png",
  "pry",
  "per",
  "phl",
  "pcn",
  "pol",
  "prt",
  "pri",
  "qat",
  "reu",
  "rou",
  "rus",
  "rwa",
  "blm",
  "shn",
  "kna",
  "lca",
  "maf",
  "spm",
  "vct",
  "wsm",
  "smr",
  "stp",
  "sau",
  "sen",
  "srb",
  "syc",
  "sle",
  "sgp",
  "svk",
  "svn",
  "slb",
  "som",
  "zaf",
  "sgs",
  "ssd",
  "esp",
  "lka",
  "sdn",
  "sur",
  "sjm",
  "swz",
  "swe",
  "che",
  "syr",
  "twn",
  "tjk",
  "tza",
  "tha",
  "tls",
  "tgo",
  "tkl",
  "ton",
  "tto",
  "tun",
  "tur",
  "tkm",
  "tca",
  "tuv",
  "uga",
  "ukr",
  "are",
  "gbr",
  "gbr",
  "gbr",
  "gbr",
  "usa",
  "usa",
  "umi",
  "ury",
  "uzb",
  "vut",
  "ven",
  "vnm",
  "vir",
  "wlf",
  "esh",
  "yem",
  "zmb",
  "zwe"
];

const chartColors = [
  "#01172F",

  "#4E6766",
  "#00635D",
  "#08A4BD",
  "#5AB1BB",
  "#EF233C",
  "#2A4D14",
  "#BA8F95",
  "#571F4E",
  "#2B2D42",
  "#BA1F33",
  "#4F759B",
  "#A2FAA3",
  "#0B2027",
  "#67E0A3",
  "#754668",
  "#91171F",
  "#111D4A",
  "#2DE1FC",
  "#292F36",
  "#FCA311",
  "#131200",
  "#E9806E",
  "#78BC61",
  "#663F46",
  "#DA4167",
  "#083D77",
  "#E6C0E9",
  "#E2EF70",
  "#B6174B",
  "#5A0001",
  "#F0803C",
  "#0D21A1",
  "#011638"
];

function getRandomChartColor(opacity) {
  var hex = "";
  var index = Math.floor(Math.random() * (chartColors.length - 1));
  if (index >= chartColors.length)
    hex = chartColors[index - chartColors.length];
  else hex = chartColors[index];

  hex = hex.replace("#", "");
  var r = parseInt(hex.substring(0, 2), 16);
  var g = parseInt(hex.substring(2, 4), 16);
  var b = parseInt(hex.substring(4, 6), 16);

  return [r, g, b];
}

function getRgbChartColorFromHex(hex) {
  var updHex = hex.replace("#", "");
  var r = parseInt(updHex.substring(0, 2), 16);
  var g = parseInt(updHex.substring(2, 4), 16);
  var b = parseInt(updHex.substring(4, 6), 16);

  return [r, g, b];
}
